{"version":3,"sources":["components/CountdownTimer/CountdownTimer.js","App.js","reportWebVitals.js","index.js"],"names":["CountdownTimer","calculateTimeLeft","Date","getFullYear","difference","timeLeft","days","Math","floor","hours","minutes","seconds","useState","setTimeLeft","useEffect","setTimeout","timerComponents","Object","keys","forEach","interval","push","className","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAsDeA,MAnDf,WACE,IAAMC,EAAoB,YACb,IAAIC,MAAOC,cAAtB,IACMC,GAAc,IAAIF,KAAJ,UAAY,KAAZ,YAA6B,IAAIA,KACjDG,EAAW,GAWf,OATID,EAAa,IACfC,EAAW,CACTC,KAAMC,KAAKC,MAAMJ,EAAU,OAC3BK,MAAOF,KAAKC,MAAOJ,EAAU,KAAuB,IACpDM,QAASH,KAAKC,MAAOJ,EAAa,IAAO,GAAM,IAC/CO,QAASJ,KAAKC,MAAOJ,EAAa,IAAQ,MAIvCC,GAGT,EAAgCO,mBAASX,KAAzC,mBAAOI,EAAP,KAAiBQ,EAAjB,KACA,EAAeD,oBAAS,IAAIV,MAAOC,eAAnC,oBAEAW,qBAAU,WACRC,YAAW,WACTF,EAAYZ,OACX,QAGL,IAAMe,EAAkB,GAaxB,OAXAC,OAAOC,KAAKb,GAAUc,SAAQ,SAACC,GACxBf,EAASe,IAIdJ,EAAgBK,KACd,iCACGhB,EAASe,GADZ,IACwBA,EAAU,WAKpC,qBAAKE,UAAU,iBAAf,SAEE,oBAAIA,UAAU,yBAAd,SACGN,EAAgBO,OAASP,EAAkB,mDCZrCQ,MAhCf,WACE,OACE,sBAAKF,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,mBAAGA,UAAU,oBAAb,2BACA,mBAAGA,UAAU,UAAb,4CACA,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,mBAAGA,UAAU,OAAb,mBACA,mBAAGA,UAAU,UAAb,uBAEF,8BACE,mBAAGA,UAAU,WAAb,mBAEF,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,OAAb,oBACA,mBAAGA,UAAU,UAAb,6BAKN,sBAAKA,UAAU,SAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,eAAb,gCACA,mBAAGA,UAAU,mBAAb,wCChBKG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dfecc8c6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./CountdownTimer.css\";\r\n\r\nfunction CountdownTimer() {\r\n  const calculateTimeLeft = () => {\r\n    let year = new Date().getFullYear();\r\n    const difference = +new Date(`${2022}-10-30`) - +new Date();\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n  const [year] = useState(new Date().getFullYear());\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n  });\r\n\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n  return (\r\n    <div className='countdownTimer'>\r\n    \r\n      <h1 className='countdownTimer__header'>\r\n        {timerComponents.length ? timerComponents : <span>It's Time!</span>}\r\n      </h1>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountdownTimer;\r\n","import \"./App.css\";\nimport CountdownTimer from \"./components/CountdownTimer/CountdownTimer\";\n\nfunction App() {\n  return (\n    <div className='app'>\n      <div className='top'>\n        <p className='top_save-the-date'>save the date</p>\n        <p className='top_for'>for the wedding celebration of</p>\n        <div className='top_name-holder'>\n          <div className='top_name-first'>\n            <p className='name'>HARRY</p>\n            <p className='surname'>Minnie</p>\n          </div>\n          <div>\n            <p className='and_sign'>and</p>\n          </div>\n          <div className='top_name-second'>\n            <p className='name'>CHANEL</p>\n            <p className='surname'>Vallun</p>\n          </div>\n        </div>\n      </div>\n\n      <div className='bottom'>\n        <CountdownTimer />\n        <div className='bottom__info'>\n          <p className='bottom__date'>September 30, 2022</p>\n          <p className='bottom__location'>Paarl, Cape Town</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}